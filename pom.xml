<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>de.the-library-code.dspace</groupId>
   <artifactId>addon-duplication-detection-service</artifactId>
   <packaging>pom</packaging>
   <version>6.3.1</version>
   <name>DSpace Addon: Duplication Detection Service</name>
   <description>
   	Addon for DSpace to include a title based duplication detection service into submission and workflow of DSpace.
   </description>
   <url>https://github.com/the-library-code/deduplication</url>

   <organization>
      <name>The Library Code GmbH</name>
      <url>https://www.the-library-code.de</url>
   </organization>
   <developers>
       <developer>
           <name>Pascal-Nicolas Becker</name>
           <email>pascal at the dash library dash code dot de</email>
           <organization>The Library Code GmbH</organization>
           <organizationUrl>https://www.the-library-code.de</organizationUrl>
           <timezone>Europe/Berlin</timezone>
       </developer>
   </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <slf4j.version>1.7.14</slf4j.version>
        <!-- 'root.basedir' is the path to the root [dspace-src] dir. It must be redefined by each child POM,
             as it is used to reference the LICENSE_HEADER and *.properties file(s) in that directory. -->
        <root.basedir>${basedir}</root.basedir>
        <dspace.version>6.3</dspace.version>
    </properties>

    <scm>
        <connection>scm:git:git@github.com:the-library-code/deduplication.git</connection>
        <developerConnection>scm:git:git@github.com:the-library-code/deduplication.git</developerConnection>
        <url>git@github.com:the-library-code/deduplication.git</url>
        <tag>duplication-detection-service-6.3.1</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
      <!-- Define Maven Plugin Settings that should be inherited to ALL submodule POMs.
           (NOTE: individual POMs can override specific settings). -->
      <pluginManagement>
          <plugins>
                <!-- Use to enforce a particular version of Java and ensure no conflicting dependencies -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                    <executions>
                        <execution>
                            <id>enforce-java</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <!-- Make sure that we do not have conflicting dependencies-->
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <DependencyConvergence />
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            <!-- Used to compile all Java classes -->
              <plugin>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <version>3.1</version>
                  <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                  </configuration>
              </plugin>
                <!-- Used to package all JARs -->
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
              </plugin>
                <!-- Used to package all WARs -->
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
             </plugin>
                <!-- Used to validate License Headers (see build process) -->
             <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.6</version>
             </plugin>
                <!-- Used to generate a new release via Sonatype (see release profile below). -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.7</version>
                </plugin>
                <!-- Used to generate JavaDocs for new releases (see release profile below). -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <!-- Used to generate source JARs for new releases (see release profile below). -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <!-- Used to sign new releases via GPG (see release profile below). -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
          </plugins>
      </pluginManagement>

      <!-- These plugin settings only apply to this single POM and are not inherited
           to any submodules. -->
      <plugins>
         <plugin>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.5</version>
            <configuration>
                <!-- During release:perform, enable the "release" profile (see below) -->
                <releaseProfiles>release</releaseProfiles>
                <goals>deploy</goals>
                <!-- Suggest tagging the release in SCM as "dspace-[version]" -->
                <tagNameFormat>duplication-detection-service-@{project.version}</tagNameFormat>
                <!-- Auto-Version all modules the same as the parent module -->
                <autoVersionSubmodules>true</autoVersionSubmodules>
            </configuration>
         </plugin>
         <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <!-- License header file (can be a URL, but that's less stable if external site is down on occasion) -->
                    <header>${root.basedir}/LICENSE_HEADER</header>
                    <!--Just check headers of everything in the /src directory -->
                    <includes>
                        <include>src/**</include>
                    </includes>
                    <!--Use all default exclusions for IDE files & Maven files, see: 
                        http://code.google.com/p/maven-license-plugin/wiki/Configuration#Default_excludes -->
                    <useDefaultExcludes>true</useDefaultExcludes>
                    <!-- Add some default DSpace exclusions not covered by <useDefaultExcludes> 
                         Individual Maven projects may choose to override these defaults. -->
                    <excludes>
                        <exclude>**/src/test/resources/**</exclude>
                        <exclude>**/src/test/data/**</exclude>
                        <exclude>**/src/main/license/**</exclude>
                        <exclude>**/testEnvironment.properties</exclude>
                        <exclude>**/META-INF/**</exclude>
                        <exclude>**/robots.txt</exclude>
                        <exclude>**/*.LICENSE</exclude>
                        <exclude>**/LICENSE*</exclude>
                        <exclude>**/README*</exclude>
                        <exclude>**/readme*</exclude>
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/build.properties*</exclude>
                    </excludes>
                    <mapping> 
                        <!-- Custom DSpace file extensions which are not recognized by maven-release-plugin: 
                             *.xmap, *.xslt, *.wsdd, *.wsdl, *.ttl, *.LICENSE -->
                        <xmap>XML_STYLE</xmap>
                        <xslt>XML_STYLE</xslt>
                        <wsdd>XML_STYLE</wsdd>
                        <wsdl>XML_STYLE</wsdl>
                        <ttl>SCRIPT_STYLE</ttl>
                        <LICENSE>TEXT</LICENSE>
                    </mapping>  
                    <encoding>UTF-8</encoding>
                    <!-- maven-license-plugin recommends a strict check (e.g. check spaces/tabs too) -->
                    <strictCheck>true</strictCheck>
                </configuration>
                <executions>
                    <execution>
                        <id>check-headers</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
         </plugin>
      </plugins>
   </build>
   
   <!--
        Activate javadoc, code-signing and sonatype stuff only when releaseing
        new versions.
    -->
        <profiles>
            <profile>
                <id>release</id>
                <activation>
                    <activeByDefault>false</activeByDefault>
                </activation>
                <modules>
                    <module>api</module>
                    <module>jspui</module>
                </modules>
                <build>
                    <plugins>
                        <!-- Used to generate a new release via Sonatype. -->
                        <plugin>
                            <groupId>org.sonatype.plugins</groupId>
                            <artifactId>nexus-staging-maven-plugin</artifactId>
                            <extensions>true</extensions>
                            <configuration>
                                <serverId>ossrh</serverId>
                                <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                                <autoReleaseAfterClose>false</autoReleaseAfterClose>
                            </configuration>
                        </plugin>
                        <!-- Used to generate JavaDocs for new releases. -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>attach-javadocs</id>
                                    <goals>
                                        <goal>aggregate-jar</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Used to generate source JARs for new releases. -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>attach-sources</id>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Used to sign new releases via GPG. -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>sign-artifacts</id>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>sign</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </build>
            </profile>
        </profiles>

        <!-- Allways activate both modules. -->
        <modules>
            <module>api</module>
            <module>jspui</module>
        </modules>

   <!--
      Dependency management provides a means to control which
      versions of dependency jars are used for compilation
      and packaging into the distribution.  Rather than placing
      a version in your dependencies, look here first to see if
      its already strongly defined in dspace-parent and dspace-api.
   -->
   <dependencyManagement>
      <dependencies>
         <!-- DSpace core and endorsed Addons -->
         <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-api</artifactId>
            <version>${dspace.version}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-jspui</artifactId>
            <type>jar</type>
            <classifier>classes</classifier>
            <version>${dspace.version}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-services</artifactId>
            <version>${dspace.version}</version>
            <scope>provided</scope>
         </dependency>

         <!-- addon internal dependencies -->
         <dependency>
             <groupId>de.the-library-code.dspace</groupId>
             <artifactId>addon-duplication-detection-service-jspui</artifactId>
             <version>${project.version}</version>
         </dependency>
         <dependency>
             <groupId>de.the-library-code.dspace</groupId>
             <artifactId>addon-duplication-detection-service-api</artifactId>
             <version>${project.version}</version>
         </dependency>

         <!-- Third Party Dependencies -->
         <dependency>
             <groupId>commons-lang</groupId>
             <artifactId>commons-lang</artifactId>
             <version>2.6</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>servlet-api</artifactId>
             <version>2.5</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>jstl</artifactId>
             <version>1.2</version>
         </dependency>
         <dependency>
             <groupId>taglibs</groupId>
             <artifactId>standard</artifactId>
             <version>1.1.2</version>
         </dependency>
         <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>jsp-api</artifactId>
             <version>2.0</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>log4j</groupId>
             <artifactId>log4j</artifactId>
             <version>1.2.17</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>jcl-over-slf4j</artifactId>
             <version>${slf4j.version}</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>slf4j-api</artifactId>
             <version>${slf4j.version}</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>slf4j-jdk14</artifactId>
             <version>${slf4j.version}</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>slf4j-log4j12</artifactId>
             <version>${slf4j.version}</version>
             <scope>provided</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <licenses>
      <license>
         <name>DuraSpace BSD License</name>
         <url>https://raw.github.com/DSpace/DSpace/master/LICENSE</url>
         <distribution>repo</distribution>
         <comments>
            A BSD 3-Clause license for the DSpace codebase.
         </comments>
      </license>
    </licenses>

    <repositories>
        <repository>
            <id>sonatype-releases</id>
            <name>Sonatype Releases Repository</name>
            <url>https://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
    </repositories>

</project>
